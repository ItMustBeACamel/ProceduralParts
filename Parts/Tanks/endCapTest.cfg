PART
{
	// --- general parameters ---
	name = proceduralTankEndCaps
	module = Part
	author = AncientGammoner, NathanKell, Swamp Ig

	// --- asset parameters ---
	MODEL
	{
		model = ProceduralParts/Parts/cylinderTank
		scale = 1,1,1
	}
	scale = 1
	rescaleFactor = 1

	// --- node definitions ---
	node_stack_top=0,0.5,0,0,1,0,1
	node_stack_bottom=0,-0.5,0,0,-1,0,1
	node_attach=0,0,0.5,0,0,-1,1

	// --- editor parameters ---
	cost = 0 // 4000
	TechRequired = basicRocketry
	entryCost = 4000
	category = FuelTank
	subcategory = 0
	title = end cap test
	manufacturer = Kerbchem Industries
	description = Made from viscoelastic nanopolymers (which were discovered by accident... growing in the back of the office mini-fridge) this fuel tank can be stretched to accommodate fuel loads of a range of sizes and shapes. Hardens to a rigid structure before launch!

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000

	MODULE
	{
		name = ProceduralPart
		
		costPerT = 1
		costPerkL = 0
		baseCost = 0
		
		TECHLIMIT
		{
			// FL-T100 - 1.25 x 0.625 m = 0.767 kL
			name = basicRocketry
			diameterMin = 1.25
			diameterMax = 1.25
			lengthMin = 0.625
			lengthMax = 0.625
			volumeMin = 0.76
			volumeMax = 0.8
		}
		
		TECHLIMIT
		{
			// FL-T200 - 1.25 x 1.105 m = 1.356 kL
			name = generalRocketry
			lengthMax = 1.105
			volumeMax = 1.5
		}
		
		TECHLIMIT
		{
			// FL-T400 - 1.25 x 1.9 m = 2.332 kL
			name = advRocketry
			lengthMax = 1.9
			volumeMax = 2.5
		}
		
		TECHLIMIT
		{
			// for the cone tank
			name = specializedConstruction		
			diameterMin = 1.0
		}
		
		TECHLIMIT
		{
			// Oscar-B - 0.625 x 0.36 m = 0.1104 kL
			name = propulsionSystems
			lengthMin = 0.36
			diameterMin = 0.625
			volumeMin = 0.1
		}
		
		TECHLIMIT
		{
			// FL-T800 - 1.25 x 3.78 m = 4.639 kL
			name = fuelSystems
			lengthMax = 3.78
			volumeMax = 4.65
		}
		
		TECHLIMIT
		{
			// Rockomax X200-8 - 2.5 x 0.94 m = 4.639 kL
			name = fuelSystems
			diameterMax = 2.5
			lengthMax = 0.94
			volumeMax = 4.15
		}
		
		TECHLIMIT
		{
			// Rockomax X200-16 - 2.5 x 1.875 m = 9.204 kL
			name = fuelSystems
			diameterMax = 2.5
			lengthMax = 1.875
			volumeMax = 9.21
		}
		
		TECHLIMIT
		{
			// Rockomax X200-32 - 2.5 x 3.75 m = 18.41 kL
			name = fuelSystems
			diameterMax = 2.5
			lengthMax = 3.75
			volumeMax = 18.41
		}
		
		TECHLIMIT
		{
			// Rockomax Jumbo-64 - 2.5 x 7.5 m = 36.82 kL
			name = advFuelSystems
			diameterMax = 2.5
			lengthMax = 3.75
			volumeMax = 36.825
		}
		
		TECHLIMIT
		{
			// Kerbodyne S3-3600 - 3.75 x 1.94 m = 21.43 kL
			name = largeVolumeContainment
			diameterMax = 3.75
			lengthMax = 1.94
			volumeMax = 21.44
		}
		
		TECHLIMIT
		{
			// Kerbodyne S3-7200 - 3.75 x 3.87 m = 42.8 kL
			name = largeVolumeContainment
			diameterMax = 3.75
			lengthMax = 3.87
			volumeMax = 42.8
		}
		
		TECHLIMIT
		{
			// Kerbodyne S3-14400 - 3.75 x 7.5 m = 82.83 kL
			name = highPerformanceFuelSystems
			diameterMax = 3.75
			lengthMax = 7.5
			volumeMax = 82.84
		}
		
		TECHLIMIT {
			// Make everything unlimited for metaMaterials
			name = metaMaterials
			diameterMin = 0.1
			diameterMax = Infinity
			lengthMin = 0.1
			lengthMax = Infinity
			volumeMin = 0.1
			volumeMax = Infinity
		}
	}
	MODULE
	{
		name = ProceduralShapeCylinder
		displayName = Cylinder
		techRequired = start
		
		length = 0.625
		diameter = 1.25
		
		endCap=classic
		
		END_CAPS
		{
			#$@PP_END_CAP_LIB/CAPS[classic]$ {}
			
		}
		
		
	}
	MODULE 
	{
		name = ProceduralShapeCone
		displayName = Cone
		techRequired = specializedConstruction
		
		coneTopMode = LimitMin
		coneBottomMode = LimitMin
		costMultiplier = 0.2
		
		length = 0.75
		topDiameter = 1.0
		bottomDiameter = 1.25
		
	}
	MODULE 
	{
		name = ProceduralShapePill
		displayName = Fillet Cylinder
		techRequired = advMetalworks
		
		costMultiplier = 0.5
		
		length = 1.0
		diameter = 1.25
		fillet = 0.25
		
	}
	MODULE 
	{
		name = ProceduralShapeBezierCone
		displayName = Smooth Cone
		techRequired = composites
		costMultiplier = 0.35
		
		coneTopMode = LimitMin
		coneBottomMode = LimitMin
		
		selectedShape = Round #1
		
		length = 1.0
		topDiameter = 0.625
		bottomDiameter = 1.25
		
	}
	MODULE
	{
		name = TankContentSwitcher
		useVolume = true
		
		// All mixed fuel tanks with the exception of the micro ones have the same resource per ton
		// All the X200 series, plus the FL-T800 have the same dry density and resource units per kL volume
		TANK_TYPE_OPTION 
		{
			name = Mixed
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 1
			costMultiplier = 1.0
			RESOURCE 
			{
				name = LiquidFuel
				unitsPerKL = 78.22784
				//unitsPerT = 720
			}
			RESOURCE 
			{
				name = Oxidizer
				unitsPerKL = 95.6118
				//unitsPerT = 880
			}
		}
		
		// Stock tanks for liquid fuels are pretty un-physical in terms of their mass ratios
		// The only one where it is relatively easy to calculate the volume for is Mk1 fuselage
		// which gives a higher dry density than the mixed tanks. I have used a different dry
		// density (lower than the stock, but higher than stretchy SRB was using)
		
		// The other tanks with the exception of the Mk1 have 800 units per T dry mass of fuel
		// This gives you a slight advantage to using the liquid fuel tanks ahead of the mixed tank
		TANK_TYPE_OPTION 
		{
			name = LiquidFuel
			dryDensity = 1
			costMultiplier = 1
			techRequired = fuelSystems
			RESOURCE 
			{
				name = LiquidFuel
				unitsPerT = 1600
				// As per StretchySRB
				// unitsPerKL = 49.9789
				// As per Mk1
				// unitsPerKL = 65.19
			}
		}
		
		// Nothing much to go on for oxidizer tanks, will keep the same dry density and ratio.
		TANK_TYPE_OPTION
		{
			name = Oxidizer
			dryDensity = 1
			costMultiplier = 1
			techRequired = fuelSystems
			RESOURCE 
			{
				name = Oxidizer
				unitsPerT = 1600
				// As per StretchySRB
				// unitsPerKL = 81.4873
			}
		}
	}
	
	MODULE
	{
		name=LFStockBalance
		
		density0_625m
		{
			//key = 0 0
			key = 0.375 0.226449
			key = 5 0.108648
		}
		
		density1_25m
		{
			//key = 0 0
			key = 0.625 0.081486
			key = 1.105 0.092182
			key = 1.9 	0.1072041166
			key = 3.74  0.1077818495
		}
		
		density2_5m
		{
			//key = 0 0
			key = 0.94 0.1083658431
			key = 1.875 0.108648
			key = 3.75  0.108636
		}
		
		density3_75m
		{
			//key = 0 0
			key = 1.94 0.1049930005
			key = 3.87 0,1051401869
			key = 7.5  0.1086562840

		}
		
		costCurve
		{
			key = 0.025 2065.6
			key = 0.0625 1665.6
			key = 0.125 1465.6
			key = 0.25 1265.6
			key = 0.5 865.6
			key = 1 815
			key = 2 765.6
			key = 2.25 710.0444
		}
	}
}