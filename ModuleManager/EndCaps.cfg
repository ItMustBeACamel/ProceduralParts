
// DEFAULT

PP_END_CAP_LIB
{
	
	// default caps (the old ones)
	CAPS
	{
		name=default
	}
	
	CAPS
	{
		name=barrel
		
		BOTH
		{
			// r y uv1 edgemode uv2 radiusmode, ymode
			
			texture = ProceduralParts/Parts/ends			
					
			key = 0.7 0.95 0.6 SHARP
			key = 0.7 0.01 0.65 SHARP_SEAM 0.7 RELATIVE_TO_CAP_RADIUS OFFSET
			key = 1.03 0.01 1.0 SHARP_SEAM 0.95 RELATIVE_TO_CAP_RADIUS OFFSET
			key = 1.03 0.95 1.0 SHARP
			key = 1.0  0.95 1.0 SHARP 1.0 RELATIVE_TO_SHAPE_RADIUS
		}
	}
	
	CAPS
	{
		name=rockomax
		
		BOTH
		{
			texture = ProceduralParts/Parts/stockend
			invertFaces=true
			closeFirstRing=false
			closeLastRing=true
			invertLastClosure=true
			
			// r y uv1 edgemode uv2 radiusmode, ymode
			key =  0.00 -0.11 1.0 SHARP 1.00 OFFSET_TO_CAP_RADIUS OFFSET
			key =  0.05 -0.10 0.9 SHARP 0.95 OFFSET_TO_CAP_RADIUS OFFSET
			key =  0.05  0.00 0.8 SHARP 0.90 OFFSET_TO_CAP_RADIUS OFFSET
			key =  0.00  0.03 0.7 SMOOTH 0.85 OFFSET_TO_CAP_RADIUS OFFSET
			key = -0.05  0.00 0.6 SHARP 0.80 OFFSET_TO_CAP_RADIUS OFFSET
			key = -0.05 -0.07 0.5 SHARP 0.75 OFFSET_TO_CAP_RADIUS OFFSET
			
			key = -0.20  0.00 0.3 SMOOTH 0.7 OFFSET_TO_CAP_RADIUS OFFSET
			
			specular = 0.2, 0.2, 0.2
			
		}
	
	}
	
	CAPS
	{
		name=classic
		BOTH
		{
			texture = ProceduralParts/Parts/ends
			
			invertFaces=true
			closeFirstRing=false
			closeLastRing=true
			invertLastClosure=true
			//specular= 128.0, 0, 0, 1
			
			key = 1.0 1.0 1.0 SHARP
			key = 0.65 1.0 0.65 SHARP
			key = 0.35 0.9 0.35 SHARP			
		}
	}
	
	CAPS
	{
		name=cone_inside
		
		TOP
		{
		
		}
		
		BOTTOM
		{
			texture = ProceduralParts/Parts/ends
			
			invertFaces=true
			closeFirstRing=false
			closeLastRing=true
			invertLastClosure=true
			//specular= 128.0, 0, 0, 1
			
			// r y uv1 edgemode uv2 radiusmode, ymode
			key = 1.00  1.0 1.00 SHARP 0 
			key = 0.65  1.0 0.7 SHARP_SEAM 0.65
			key = 0.65  0   0.4 SMOOTH 0 RELATIVE_TO_SHAPE_RADIUS
			key = 0.65 -0.5 0.2 SHARP 0 RELATIVE_TO_SHAPE_RADIUS
		}
	}
	
	CAPS
	{
		name=dome
		BOTH
		{
			texture = Squad/Parts/FuelTank/Size3Tanks/fueltTanks_cm
			
			invertFaces=true
			closeFirstRing=false
			closeLastRing=true
			invertLastClosure=true
			//specular= 128.0, 0, 0, 1
			
			textureScale = 0.37, 0.37		
			textureOffset = 1.3112 , -1.301
			
			// r y uv1 edgemode uv2 radiusmode, ymode
			key =  1.00  1.00 1.00 SHARP 0 
			key = -0.10  0.00 0.93 SHARP 0 OFFSET_TO_CAP_RADIUS OFFSET
			key = -0.15 -0.04 0.90 SMOOTH 0 OFFSET_TO_CAP_RADIUS OFFSET
			key = -0.25 -0.40 0.83 SHARP 0 OFFSET_TO_CAP_RADIUS OFFSET
			
			key = -0.65 -0.10 0.60 SMOOTH 0 OFFSET_TO_CAP_RADIUS OFFSET
			
		
		}
	
	}
}

@PART[*]:HAS[@MODULE[ProceduralPart]]:FOR[ProceduralParts]
{
	@MODULE[ProceduralShape*],*
	{	
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[default] {}
			//#@PP_END_CAP_LIB/CAPS[flatgrey] {}
			
		}
	}
}


//////////////////////////
// LIQUID FUEL TANK //////
//////////////////////////

@PART[proceduralTankLiquid]:FOR[ProceduralParts]
{
	@MODULE[ProceduralShapeCylinder]
	{
		endCap=barrel
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[barrel] {}
			#@PP_END_CAP_LIB/CAPS[classic] {}
			#@PP_END_CAP_LIB/CAPS[rockomax] {}
			#@PP_END_CAP_LIB/CAPS[dome] {}
		}
	}
	
	@MODULE[ProceduralShapeCone]
	{
		endCap=classic
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
	
	@MODULE[ProceduralShapeBezierCone]
	{
		endCap=classic
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
	
	@MODULE[ProceduralShapePill]
	{
		endCap=classic
		
		%END_CAPS
		{
			//#@PP_END_CAP_LIB/CAPS[barrel] {}
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
}


@PART[proceduralTankOre]:FOR[ProceduralParts]
{
	@MODULE[ProceduralShapeCylinder]
	{
		endCap=barrel
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[barrel] {}
			#@PP_END_CAP_LIB/CAPS[classic] {}
			#@PP_END_CAP_LIB/CAPS[rockomax] {}
		}
	}
	
	@MODULE[ProceduralShapeCone]
	{
		endCap=classic
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
	
	@MODULE[ProceduralShapeBezierCone]
	{
		endCap=classic
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
	
	@MODULE[ProceduralShapePill]
	{
		endCap=classic
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[barrel] {}
			#@PP_END_CAP_LIB/CAPS[classic] {}
		}
	}
}

@PART[proceduralNoseCone]:FOR[ProceduralParts]
{	
	@MODULE[ProceduralShapeBezierCone]
	{
		endCap=cone_inside
		
		%END_CAPS
		{
			#@PP_END_CAP_LIB/CAPS[cone_inside] {}
		}
	}	
}